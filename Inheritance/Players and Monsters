/******************************************************************************

                            Online Java Compiler.
                Code, Compile, Run and Debug java program online.
Write your code in this editor and press "Run" button to execute it.

*******************************************************************************/

public class Main
{
	public static void main(String[] args) {
		System.out.println("Hello World");
		
		Knight k = new Knight("Knightpl",89);
		System.out.println(k.toString());
		
		Elf e = new Elf("Elfsolja",54);
		System.out.println(e.toString());
		
		DarkKnight dK = new DarkKnight("DKmaster",110);
		System.out.println(dK.toString());
		
		Wizard w = new Wizard("PlayerWizard", 445);
		System.out.println(w.toString());
		
		SoulMaster sm = new SoulMaster("SMPlayer",115);
		System.out.println(sm.toString());
		
		DarkWizard dw = new DarkWizard("DWPlayer",712);
		System.out.println(dw.toString());
		
		
		
		
		
	}
}
class Knight extends Hero{
    public Knight(String username,int level)
    {
        super(username,level);
    }
    
    
    
    @Override
    public String toString()
    {
        return super.toString();
    }    
    
}
class DarkKnight extends Knight
{
    public DarkKnight(String username,int level)
    {
        super(username,level);
    }
    @Override
    public String toString()
    {
        return super.toString();
    }
}
class BladeKnight extends DarkKnight{
    
    public BladeKnight(String username,int level)
    {
        super(username,level);
    }
    @Override
    public String toString()
    {
       return super.toString();
    }
}
class Wizard extends Hero{
    public Wizard(String name,int level)
    {
        super(name,level);
    }
}
class DarkWizard extends Wizard{
       
     public DarkWizard(String username,int level)
     {
         super(username,level);
     }
       @Override
       
       public String toString()
       {
           return super.toString();
       }
}
class SoulMaster extends DarkWizard
{
    public SoulMaster(String username,int level)
    {
        super(username,level);
    }
    
    @Override
    public String toString()
    {
        return super.toString();
    }
}
class MuseElf extends Elf
{
    public MuseElf(String username,int level)
    {
        super(username,level);
    }
    @Override
    public String toString()
    {
        return super.toString();
    }
}
class Elf extends Hero{
    public Elf(String username,int level)
    {
        super(username,level);
    }
    @Override
    public String toString()
    {
        return super.toString();
    }
    
} 
abstract class  Hero{
    
    String username;
    int level;
    
    
    
    public Hero(String username,int level)
    {
        this.setUsername(username);
        this.setLevel(level);
    }
    
    public void setUsername(String username)
    {
        this.username = username;
    }
    public String getUsername()
    {
        return this.username;
    }
    

    
    public void setLevel(int level)
    {
        this.level = level;
    }
    
    public int getLevel()
    {
        return this.level;
    }
    
    @Override
    public String toString()
    {
        return String.format("Type: %s Username: %s Level: %s",
        this.getClass().getName(),
        this.getUsername(),
        this.getLevel());
    }
}
