//теория : 


Какво е Singleton патърн?
Singleton е един от основните проектни патърни, който се използва, когато трябва да се гарантира, че даден клас има само една инстанция през целия живот на програмата и предоставя глобален достъп до тази инстанция. Класът, който имплементира Singleton, ще създаде само една инстанция на себе си и ще предостави публичен начин за достъп до нея.

Защо използваме Singleton патърна?
В случая на твоята задача, имаме клас, който съдържа информация, която не се променя много често — например, населението на различни столици. Ако всяка част от програмата създава отделни инстанции на класа, това ще доведе до ненужно заемаща памет многократна инстанция на обекта, който съдържа същите данни. Вместо това, използването на Singleton гарантира, че всички части от програмата ще споделят една и съща инстанция на този клас и ще използват същите данни.

Какво правим при прилагането на Singleton?
Скриване на конструктора – Тъй като искаме да имаме само една инстанция, конструкторът на класа трябва да бъде частен (private). Това предотвратява създаването на нови инстанции извън класа.

Единствена инстанция – Класът създава една единствена инстанция на себе си. Тази инстанция може да бъде достъпна чрез публично свойство или метод, обикновено наречен Instance.

Публичен метод за достъп – Класът предоставя публичен метод за достъп до инстанцията (например, Instance), който винаги връща същата инстанция.
